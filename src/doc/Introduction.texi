@c -*- texinfo -*- 

This is the manual for the tootsville server for CIWTA.

@section Who are CIWTA?

CIWTA, The Corporation  for Inter-World Tourism and  Adventuring, is the
non-profit corporation  responsible for  the current development  of the
Romance Ⅱ Game System, particularly,  for the flagship implementation of
it in the form of Tootsville Ⅴ.

For more information about CIWTA, visit the web site at 
@url{https://www.ciwta.org/}


@section What is Tootsville?

Tootsville is a massively-multiplayer online rôle-playing game
(MMORPG) in which players control colorful, elephant-like characters
know as Toots.

Tootsville was  the flagship product  which helped develop  the original
Romance game system into such  a powerful suite. Its commercial sponsor,
Res  Interactive,   LLC,  was  later   shut  down  for   legal  reasons.
The resurrected game  (with the permission of several  of Res's managing
members) is now the flagship for the ongoing development of Romance Ⅱ.

As such, Romance is highly and unapologetically targeted at present
towards the needs of Tootsville.

@section What is the Romance Game System?

Romance is the name of the game system which runs Tootsville, and
which could, in future, be adapted to run other games as well.

The name ``Romance'' has a similar meaning to its usage in ``Romance
Languages,'' i.e. it means made of Romans, not ``romantic.'' The
original software modules of which Romance was made, and into which it
will be subdivided again for purposes of modularity in the 2.0 series,
are each named after a famous Roman.

Romance  has  a  few  technological   goals.  It  is  intended  to  be
comprehensive and flexible enough to  handle a variety of game worlds,
although it necessarily  has deep ties to Tootsville.  Romance also is
based on  a model  in which peer-to-peer  communications are  used for
real  time activities,  while  the central  servers  are reserved  for
persisting the world's state while it is quiescent.

@section Technology Stack

Romance is built up of the following technology stack:

@itemize
@item
The  central REST  servers are  written  in Common  Lisp, compiled  to
a   native  binary,   and  run   as   a  service   under  SystemD   in
a non-privileged user account.
@item
The  client  and peer-to-peer  application  is  written in  JavaScript
(ECMAScript 6 level), and compressed using the Google Closure Compiler
into an optimized and minified form.
@end itemize

@section Affiliated Services

In the case of Tootsville, several affiliated services are used:

@itemize
@item
Static  web servers  running  Apache serve  up  game assets,  compiled
JavaScript, and other resources.
@item
Apache  servers operate  as load  balancers across  the back-end  game
servers
@item
The Tootsbook blog is a WordPress installation
@item
The 
@item
The central database server is a MariaDB serve.
@item
Database references are cached via MemCacheD
@end itemize

@section Clusters

There are four cluster types for Tootsville.

@table @code

@item local
This refers to running a full Tootsville stack on a developer's workstation

@item test.Tootsville.org
This cluster is used for testing new builds and is the most unstable,
often having a new release pushed to it every week --- sometimes,
several in one day.

@item qa.Tootsville.org
This cluster is used for longer-term testing of the code before rolling it
out to the general public.

@item Tootsville.org
This is the main production environment

@end table

@section Overview of Major Systems

There are several major systems worth understanding from a higher
level. Most of these are documented under specific functions that are
critical in those subsystems.

@subsection Methods of Connecting

@subsubsection REST Requests

WRITEME

@subsubsection Infinity Mode communications

WRITEME

@subsubsection The Adult Sign-in Process

WRITEME

@subsubsection The Child Sign-in Process

WRITEME

@subsection In-Game Actions

@subsubsection Moving in the Game

WRITEME

@subsubsection Speech and Related Things

WRITEME

@subsubsection Game Events System (including Store Items)

WRITEME

See `INFINITY-START-EVENT' and `INFINITY-END-EVENT' for an overview.

@subsubsection Land Ownership

WRITEME

@subsubsection Clothing, Tools, and Equipment

WRITEME

@subsection World Simulation

WRITEME

@subsection Server-to-Server Streams

WRITEME

@subsection The front-end

WRITEME

@subsubsection Babylon.js

WRITEME

@subsubsection Gatekeeper

WRITEME

@subsubsection Peer-to-Peer Streams (WebRTC)

WRITEME

@subsubsection JSCL

WRITEME

@c %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@section Back Story

Once upon a time --- for all  fairy stories begin once upon a time ---
but not  too very long ago,  there were a herd  of elephants wandering
the  plains   of  Africa.  These  elephants   were  just  ``ordinary''
elephants, but of course each of them had their own personality.

...

WRITEME

...

@subsection The Magic Mist and Mist Parrots

The elephants discover the magic mist ... parrots guide them through ...

WRITEME

@subsection The Founding of Tootsville

Discover the fountain ... wish things into being ... 

WRITEME

@subsection The Classical Period

WRITEME

@subsection The Evil Mayor and Shade

WRITEME

@subsection The Destruction of Tootsville

WRITEME

@subsection The Revival

WRITEME

